#!/usr/bin/env python3
"""
Quick Pixel Fix - Immediate troubleshooting for LED issues
"""

def quick_diagnosis():
    """Quick diagnosis questions"""
    print("üö® QUICK PIXEL DIAGNOSIS")
    print("=" * 40)
    
    print("\n‚ùì ANSWER THESE QUESTIONS:")
    print("1. What type of upload did you do?")
    print("   ‚Ä¢ .dat file (LED pattern)")
    print("   ‚Ä¢ .bin file (firmware)")
    print("   ‚Ä¢ .hex file (firmware)")
    
    print("\n2. What hardware are you using?")
    print("   ‚Ä¢ ESP8266 (NodeMCU, Wemos D1 Mini, etc.)")
    print("   ‚Ä¢ ESP32")
    print("   ‚Ä¢ LED type: WS2812B, SK6812, APA102, etc.")
    print("   ‚Ä¢ Matrix size: 8x8, 16x16, strip, etc.")
    
    print("\n3. What connections do you have?")
    print("   ‚Ä¢ VCC ‚Üí Power supply (voltage?)")
    print("   ‚Ä¢ GND ‚Üí Ground")
    print("   ‚Ä¢ DIN ‚Üí Which GPIO pin?")
    
    print("\n4. What happens when you power on?")
    print("   ‚Ä¢ Any LED lights at all?")
    print("   ‚Ä¢ Device power indicator on?")
    print("   ‚Ä¢ Any serial output?")
    
    print("\nüîß IMMEDIATE FIXES TO TRY:")
    
    print("\n1Ô∏è‚É£ POWER CHECK:")
    print("   ‚Ä¢ Disconnect USB power")
    print("   ‚Ä¢ Use external 5V power supply")
    print("   ‚Ä¢ Ensure adequate current (2-3A for 8x8, 8-10A for 16x16)")
    
    print("\n2Ô∏è‚É£ CONNECTION CHECK:")
    print("   ‚Ä¢ Verify VCC ‚Üí 5V (not 3.3V)")
    print("   ‚Ä¢ Verify GND ‚Üí Common ground")
    print("   ‚Ä¢ Verify DIN ‚Üí GPIO2 (or your defined pin)")
    print("   ‚Ä¢ Check for loose wires")
    
    print("\n3Ô∏è‚É£ DEVICE RESET:")
    print("   ‚Ä¢ Press reset button on device")
    print("   ‚Ä¢ Disconnect power for 10 seconds")
    print("   ‚Ä¢ Reconnect and try again")
    
    print("\n4Ô∏è‚É£ SERIAL MONITOR:")
    print("   ‚Ä¢ Connect to device via USB")
    print("   ‚Ä¢ Open serial monitor at 115200 baud")
    print("   ‚Ä¢ Reset device and watch for messages")
    print("   ‚Ä¢ Look for 'LED Test Starting...' or similar")

def create_minimal_test():
    """Create minimal test code"""
    print("\nüéØ MINIMAL TEST CODE:")
    print("=" * 30)
    
    print("\nüì± ESP8266 Minimal LED Test:")
    print("```cpp")
    print("#include <Adafruit_NeoPixel.h>")
    print("")
    print("#define LED_PIN     2  // GPIO2 - change if needed")
    print("#define NUM_LEDS    64 // 8x8 matrix")
    print("")
    print("Adafruit_NeoPixel strip(NUM_LEDS, LED_PIN, NEO_GRB + NEO_KHZ800);")
    print("")
    print("void setup() {")
    print("  Serial.begin(115200);")
    print("  Serial.println(\"=== LED TEST STARTING ===\");")
    print("  ")
    print("  strip.begin();")
    print("  strip.setBrightness(50);")
    print("  strip.clear();")
    print("  strip.show();")
    print("  ")
    print("  Serial.println(\"LED strip initialized\");")
    print("}")
    print("")
    print("void loop() {")
    print("  Serial.println(\"Testing RED...\");")
    print("  testColor(255, 0, 0);  // Red")
    print("  delay(2000);")
    print("  ")
    print("  Serial.println(\"Testing GREEN...\");")
    print("  testColor(0, 255, 0);  // Green")
    print("  delay(2000);")
    print("  ")
    print("  Serial.println(\"Testing BLUE...\");")
    print("  testColor(0, 0, 255);  // Blue")
    print("  delay(2000);")
    print("  ")
    print("  Serial.println(\"Testing WHITE...\");")
    print("  testColor(255, 255, 255);  // White")
    print("  delay(2000);")
    print("  ")
    print("  Serial.println(\"Turning OFF...\");")
    print("  strip.clear();")
    print("  strip.show();")
    print("  delay(2000);")
    print("}")
    print("")
    print("void testColor(int r, int g, int b) {")
    print("  for(int i = 0; i < NUM_LEDS; i++) {")
    print("    strip.setPixelColor(i, strip.Color(r, g, b));")
    print("  }")
    print("  strip.show();")
    print("}")
    print("```")
    
    print("\nüìã UPLOAD CHECKLIST:")
    print("   ‚ñ° Copy this code to Arduino IDE")
    print("   ‚ñ° Select correct board (ESP8266)")
    print("   ‚ñ° Select correct port")
    print("   ‚ñ° Install Adafruit_NeoPixel library")
    print("   ‚ñ° Upload code")
    print("   ‚ñ° Open serial monitor at 115200 baud")
    print("   ‚ñ° Reset device and watch for messages")

def hardware_verification():
    """Hardware verification steps"""
    print("\nüîå HARDWARE VERIFICATION:")
    print("=" * 30)
    
    print("\nüìè WIRING DIAGRAM:")
    print("   ESP8266/ESP32 ‚Üí LED Matrix")
    print("   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê")
    print("   ‚îÇ    VIN      ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ    5V       ‚îÇ")
    print("   ‚îÇ    GND      ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ    GND      ‚îÇ")
    print("   ‚îÇ   GPIO2     ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ    DIN      ‚îÇ")
    print("   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò")
    
    print("\n‚ö° POWER REQUIREMENTS:")
    print("   ‚Ä¢ 8x8 RGB Matrix: 5V @ 2-3A")
    print("   ‚Ä¢ 16x16 RGB Matrix: 5V @ 8-10A")
    print("   ‚Ä¢ Individual RGB LED: 5V @ 60mA")
    print("   ‚Ä¢ USB power: Limited to ~500mA")
    
    print("\nüéØ GPIO PIN OPTIONS:")
    print("   ESP8266 Safe Pins:")
    print("   ‚Ä¢ GPIO2 (D4) - Recommended")
    print("   ‚Ä¢ GPIO4 (D2)")
    print("   ‚Ä¢ GPIO5 (D1)")
    print("   ‚Ä¢ GPIO12 (D6)")
    print("   ‚Ä¢ GPIO13 (D7)")
    print("   ‚Ä¢ GPIO14 (D5)")
    
    print("\n‚ùå AVOID THESE PINS:")
    print("   ‚Ä¢ GPIO0 (D3) - Boot mode")
    print("   ‚Ä¢ GPIO15 (D8) - Boot mode")
    print("   ‚Ä¢ GPIO16 (D0) - Boot mode")

def common_solutions():
    """Common solutions to try"""
    print("\nüí° COMMON SOLUTIONS:")
    print("=" * 25)
    
    print("\n1Ô∏è‚É£ VOLTAGE ISSUES:")
    print("   ‚Ä¢ Use 5V power supply (not 3.3V)")
    print("   ‚Ä¢ Don't power LEDs from USB")
    print("   ‚Ä¢ Check power supply current rating")
    
    print("\n2Ô∏è‚É£ WIRING ISSUES:")
    print("   ‚Ä¢ Use solid core wires")
    print("   ‚Ä¢ Keep wires short")
    print("   ‚Ä¢ Avoid wire crossings")
    print("   ‚Ä¢ Check for cold solder joints")
    
    print("\n3Ô∏è‚É£ CODE ISSUES:")
    print("   ‚Ä¢ Verify correct LED count")
    print("   ‚Ä¢ Check GPIO pin number")
    print("   ‚Ä¢ Ensure library is installed")
    print("   ‚Ä¢ Test with minimal code first")
    
    print("\n4Ô∏è‚É£ DEVICE ISSUES:")
    print("   ‚Ä¢ Reset device after upload")
    print("   ‚Ä¢ Check for error messages")
    print("   ‚Ä¢ Verify board selection")
    print("   ‚Ä¢ Try different USB cable")

if __name__ == "__main__":
    quick_diagnosis()
    create_minimal_test()
    hardware_verification()
    common_solutions()
    
    print("\nüö® URGENT: Check these first!")
    print("   1. Are you using 5V power supply?")
    print("   2. Is DIN connected to GPIO2?")
    print("   3. Are all ground connections shared?")
    print("   4. Is the device actually running? (check serial)")
    print("   5. Are there any error messages?")
